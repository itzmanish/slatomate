syntax = "proto3";

package github.itzmanish.service.slatomate;
option go_package="proto/slatomate";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

service Slatomate {
	rpc CreateOrganization (CreateOrganizationRequest) returns (Organization) {};
	rpc AuthorizeOrganization (AuthorizeOrganizationRequest) returns (google.protobuf.Empty){};
	rpc ValidateOrgAccess (ValidateOrgAccessRequest) returns (ValidateOrgAccessResponse){};
	rpc GetAllOrganization (GetAllOrganizationRequest) returns (GetAllOrganizationResponse) {};
	rpc GetOrganization (GetOrganizationRequest) returns (Organization) {};
	rpc DeleteOrganization (DeleteOrganizationRequest) returns (google.protobuf.Empty) {};
	rpc DeleteAllOrganization (google.protobuf.Empty) returns (google.protobuf.Empty) {};

	rpc CreateUser (CreateUserRequest) returns (User) {};
	rpc GetUser (GetUserRequest) returns (User) {};
	rpc DeleteUser (DeleteUserRequest) returns (google.protobuf.Empty) {};
	rpc UpdateUser (UpdateUserRequest) returns (User) {};
	rpc LoginUser (User) returns (User){};
	rpc Me (APIKeyRequest) returns (User) {};
	// Not for now
	rpc GenerateAPIKey (GenerateAPIKeyRequest) returns (GenerateAPIKeyResponse) {};
	// Admin only
	rpc GetAllUser (google.protobuf.Empty) returns (GetAllUserResponse) {};

	// Jobs
	rpc CreateJob (Job) returns (Job){};
	rpc GetJob (GetJobRequest) returns (Job){};
	rpc DeleteJob (DeleteJobRequest) returns (google.protobuf.Empty){};
	rpc GetAllJob (GetAllJobRequset) returns (GetAllJobResponse){};
}

message Message {
	map<string,string> header = 1;
	bytes body = 2;
}


// =========== Organization message definition ====================

message CreateOrganizationRequest {
	string name = 1;
	string user_id = 3;
}

message AuthorizeOrganizationRequest {
	string code = 1;
	string scope = 2;
	string org_id = 3;
	string user_id = 4;
	string error = 5;
}

message ValidateOrgAccessRequest{
	string org_id = 1;
}

message ValidateOrgAccessResponse {
	bool has_access = 1;
	string user_id = 2;
}

message GetAllOrganizationRequest{
	string user_id = 1;
}

message GetAllOrganizationResponse{
	repeated Organization organizations = 1;
	int32 count = 2;
}

message GetOrganizationRequest{
	string id = 1;
	string user_id = 2;
	string name = 3;
}

message DeleteOrganizationRequest{
	string id = 1;
	string user_id = 2;
}

message Organization {
	string id = 1;
	string name = 2;
	string slack_apikey = 3;
	string user = 4;
	string created_at = 5;
}

// ================ User message definition =======================

message CreateUserRequest {
	string name = 1;
	string email = 2;
	string password = 3;
}

message GetUserRequest {
	string id = 1;
	string email = 2;
	string api_key = 3;
}

message DeleteUserRequest {
	string id = 1;
}

message GetAllUserResponse {
	repeated User users = 1;
	int32 count = 2;
}

message UpdateUserRequest {
	string id = 1;
	string name = 2;
}

message GenerateAPIKeyRequest{
	string id = 1;
}

message GenerateAPIKeyResponse {
	string api_key = 1;
}

message APIKeyRequest {
	string api_key = 1;
}

message User {
	string id = 1;
	string name = 2;
	string email = 3;
	string password = 4;
	string api_key = 5;
	repeated Organization orgs = 6; 
	string created_at = 7;
	string last_updated = 8;
}

// ====================== Job ====================


message GetJobRequest{
	string id = 1;
	string org_id = 2;
	string name = 3;
}

message GetAllJobRequset {
	string org_id = 1;
}

message DeleteJobRequest {
	string id = 1;
	string org_id = 2;
}

message GetAllJobResponse {
	int32 count = 1;
	repeated Job jobs = 2;
}

message Job {
	string id = 1;
	string org_id = 2;
	string name = 3;
	string schedule_at = 4;
	Task task = 5;
	string status = 6;
	map<string,string> data = 7;
	google.protobuf.Timestamp created_at = 8;
}

enum Task {
	DEFAULT = 0;
	STATUS_UPDATE = 1;
}